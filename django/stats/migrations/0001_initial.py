# Generated by Django 4.1 on 2024-07-22 06:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map_name', models.SlugField()),
                ('name', models.CharField(max_length=100)),
                ('is_ct_hold_area', models.BooleanField()),
                ('is_t_push_area', models.BooleanField()),
                ('is_bomb_site', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='GamingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_closed', models.BooleanField(default=False)),
                ('rising_star', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.steamprofile')),
                ('squad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='accounts.squad')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sharecode', models.CharField(max_length=50)),
                ('timestamp', models.PositiveBigIntegerField()),
                ('score_team1', models.PositiveSmallIntegerField()),
                ('score_team2', models.PositiveSmallIntegerField()),
                ('duration', models.PositiveSmallIntegerField()),
                ('map_name', models.SlugField()),
                ('sessions', models.ManyToManyField(blank=True, related_name='matches', to='stats.gamingsession')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='MatchBadgeType',
            fields=[
                ('slug', models.SlugField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_minor', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Match-based badge type',
                'verbose_name_plural': 'Match-based badge types',
            },
        ),
        migrations.CreateModel(
            name='UpdateTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_timestamp', models.PositiveBigIntegerField(verbose_name='Scheduled')),
                ('execution_timestamp', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Execution started')),
                ('completed_timestamp', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Completed')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='update_tasks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerOfTheWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.PositiveBigIntegerField()),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='potw1', to='accounts.steamprofile')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='potw2', to='accounts.steamprofile')),
                ('player3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='potw3', to='accounts.steamprofile')),
                ('squad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.squad')),
            ],
            options={
                'verbose_name': 'Player-of-the-Week badge',
                'verbose_name_plural': 'Player-of-the-Week badges',
            },
        ),
        migrations.CreateModel(
            name='MatchParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField()),
                ('team', models.PositiveSmallIntegerField()),
                ('old_rank', models.CharField(max_length=30)),
                ('new_rank', models.CharField(max_length=30)),
                ('result', models.CharField(max_length=1)),
                ('kills', models.PositiveSmallIntegerField()),
                ('assists', models.PositiveSmallIntegerField()),
                ('deaths', models.PositiveSmallIntegerField()),
                ('score', models.PositiveSmallIntegerField()),
                ('mvps', models.PositiveSmallIntegerField()),
                ('headshots', models.PositiveSmallIntegerField()),
                ('adr', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('util_dmg', models.PositiveSmallIntegerField()),
                ('fb_thrown', models.PositiveSmallIntegerField()),
                ('fb_enemies', models.PositiveSmallIntegerField()),
                ('fb_teammates', models.PositiveSmallIntegerField()),
                ('blind_time', models.FloatField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.steamprofile', verbose_name='Player')),
                ('pmatch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stats.match', verbose_name='Match')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='MatchBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.PositiveSmallIntegerField(default=1)),
                ('badge_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='btype', to='stats.matchbadgetype')),
                ('participation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='badges', to='stats.matchparticipation')),
            ],
            options={
                'verbose_name': 'Match-based badge',
                'verbose_name_plural': 'Match-based badges',
            },
        ),
        migrations.CreateModel(
            name='KillEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('kill_type', models.PositiveSmallIntegerField()),
                ('bomb_planted', models.BooleanField()),
                ('killer_x', models.FloatField()),
                ('killer_y', models.FloatField()),
                ('killer_z', models.FloatField()),
                ('victim_x', models.FloatField()),
                ('victim_y', models.FloatField()),
                ('victim_z', models.FloatField()),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kill_events', to='stats.matchparticipation')),
                ('killer_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kills', to='stats.area')),
                ('victim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='death_events', to='stats.matchparticipation')),
                ('victim_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deaths', to='stats.area')),
            ],
        ),
        migrations.CreateModel(
            name='AreaIdentity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('canonical', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identities', to='stats.area')),
            ],
            options={
                'verbose_name_plural': 'Area identities',
            },
        ),
        migrations.AddConstraint(
            model_name='area',
            constraint=models.UniqueConstraint(fields=('map_name', 'name'), name='unique_map_name_name'),
        ),
        migrations.AddConstraint(
            model_name='matchparticipation',
            constraint=models.UniqueConstraint(fields=('player', 'pmatch'), name='unique_player_pmatch'),
        ),
        migrations.AddConstraint(
            model_name='matchparticipation',
            constraint=models.UniqueConstraint(fields=('pmatch', 'team', 'position'), name='unique_pmatch_team_position'),
        ),
        migrations.AddConstraint(
            model_name='matchbadge',
            constraint=models.UniqueConstraint(fields=('participation', 'badge_type'), name='unique_participation_badge_type'),
        ),
        migrations.AddConstraint(
            model_name='match',
            constraint=models.UniqueConstraint(fields=('sharecode', 'timestamp'), name='unique_sharecode_timestamp'),
        ),
        migrations.AddConstraint(
            model_name='areaidentity',
            constraint=models.UniqueConstraint(fields=('name', 'canonical'), name='unique_name_canonical'),
        ),
    ]
